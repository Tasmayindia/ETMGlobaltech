@model TaskManagment.Models.Request
@{
    ViewBag.Title = "Initiator";
    Layout = "~/Views/Shared/Layout.cshtml";
}
<html>
<head>
    
    <script type="text/javascript">
        function callUserMasterList() {
            var sFeatures = "dialogHeight:400px;dialogWidth:800px;center:yes;status:no;scroll:yes;resizable:no;Target:_self";
            var arrParam = new Array();
            arrParam[0] = "RRR";
            arrParam[1] = "SSS";
            arrParam[2] = "MMM";
            arrParam[3] = "LLL";

            var results = new Array();
            results = window.showModalDialog("/Search_Employee/Search_Employee", arrParam, sFeatures);
            //results = window.open("/ItemList/ItemList", arrParam, sFeatures);

            if (results != null) {
                // debugger;
                document.getElementById("DoerName1").value = results[1];
                document.getElementById("DoerNameGalaxy").value = results[0];
            }

        }

        function callUserMasterList1() {
            var sFeatures = "dialogHeight:400px;dialogWidth:800px;center:yes;status:no;scroll:yes;resizable:no;Target:_self";
            var arrParam = new Array();
            arrParam[0] = "RRR";
            arrParam[1] = "SSS";
            arrParam[2] = "MMM";
            arrParam[3] = "LLL";
            var results = new Array();
            results = window.showModalDialog("/Search_Employee1/Search_Employee1", arrParam, sFeatures);
            if (results != null) {
                //debugger;
                document.getElementById("DelegateTo1").value = results[1];
                document.getElementById("DelegateToGalaxy").value = results[0];
            }
        }


        function callUserMasterList2() {
            var sFeatures = "dialogHeight:400px;dialogWidth:800px;center:yes;status:no;scroll:yes;resizable:no;Target:_self";
            var arrParam = new Array();
            arrParam[0] = "RRR";
            arrParam[1] = "SSS";
            arrParam[2] = "MMM";
            arrParam[3] = "LLL";
            var results = new Array();
            results = window.showModalDialog("/Search_Employee1/Search_Employee1", arrParam, sFeatures);
            if (results != null) {
                document.getElementById("ReviewBy").value = results[1];
                document.getElementById("ReviewByGalaxy").value = results[0];
            }

        }

        $(document).ready(function () {
            $("#GetDate").datepicker({
                dateFormat: 'dd-M-yy',
                showOn: "button",
                buttonText: "DatePicker",
                buttonImage: "@Url.Content("~/Content/images/calendericon.png")",
                buttonImageOnly: true
            });
            $("#expectedtargetdate").attr("readonly", "disabled");
            $("#expectedtargetdate").datepicker({
                minDate: -0,
                dateFormat: 'dd-M-yy',
                showOn: "button",
                buttonText: "DatePicker",
                buttonImage: "/Content/images/calendericon.png",
                buttonImageOnly: true
            });
            $("#ProposedDatedate").datepicker({
                minDate: -0,
                dateFormat: 'dd-M-yy',
                showOn: "button",
                buttonText: "DatePicker",
                buttonImage: "/Content/images/calendericon.png",
                buttonImageOnly: true
            });
            $("#AgreedDate").datepicker({
                minDate: -0,
                dateFormat: 'dd-M-yy',
                showOn: "button",
                buttonText: "DatePicker",
                buttonImage: "/Content/images/calendericon.png",
                buttonImageOnly: true
            });
        });
    </script>
    <script type="text/javascript">
        $(function () {
            if (document.getElementById("InitiatorStatus") != null) {
                if ($('input[id=InitiatorStatus]')[0].checked == true) {
                    var Status = $('input[id=InitiatorStatus]')[0].val();
                    if (Status == "Transfer") {
                        $("#idddlTransfer").show();
                    }
                }
                else {
                    $("#idddlTransfer").hide();
                }
            }
            else {
                $("#idddlTransfer").hide();
            }
        });
        function checkedChangedTransfer(a) {

            if (a.id == "idTransfer") {
                if (a.checked == true) {
                    $("#idddlTransfer").show();
                }
                else {
                    $("#idddlTransfer").hide();
                }
            }
            else { $("#idddlTransfer").hide(); }

        }
    </script>
    <script type="text/javascript">

        function validateTaskdetails()
        {
            var projectname = document.getElementById('projectname').value;
            var projectdescription = document.getElementById('projectdescription').value;
            var expectedoutput = document.getElementById('ExpectedOutput1').value;
            var expectedtargetdate = document.getElementById('expectedtargetdate').value;
            var DoerName1 = document.getElementById("DoerName1").value;
            var Remark = document.getElementById("InitiatorRemark").value;

            if (projectname == "0" || projectname == "") {
                alert('Enter Task Name');
                return false;
            }
            if (projectdescription == "0" || projectdescription == "") {
                alert('Enter Task Description');
                return false;
            }
            if (expectedoutput == "0" || expectedoutput == "") {
                alert('Enter expected output');
                return false;
            }
            if (expectedtargetdate == null || expectedtargetdate == "") {
                alert('Select Expected Target Date');
                return false;
            }
            if (DoerName1 == "" || DoerName1 == null) {
                alert('Enter Assignee');
                return false;
            }
            if (Remark == null || Remark == "") {
                alert('Enter Remark');
                return false;

            }
        }        

        function validaterequestdetails() {
            //debugger;
            var status = '@TempData["NextStatus"]';
            var role = '@TempData["Role"]';
            //debugger;          
            if (status == "1") {              
                    var expectedtargetdate = document.getElementById('ProposedDatedate').value;
                    var projectname = document.getElementById('ProposedDateRemark').value;
                    if (expectedtargetdate == null || expectedtargetdate == "") {
                        alert('Enter Proposed Date');
                        return false;
                    }
                    else if (projectname == "0" || projectname == "") {
                        alert('Enter Remark..!!');
                        return false;
                    }               
                return true;
            }
            else if (status == "2") {
                var DoerStatus = document.getElementById("DoerStatus").value;
                if (DoerStatus == null || DoerStatus == "") {
                    alert("Select Task Status");
                    return false;
                }
                var projectname = document.getElementById('ExpectedOutput1').value;

                if (projectname == "0" || projectname == "") {
                    alert('Enter Remark..!!');
                    return false;
                }
                //debugger;
                return true;
            }
            else if (status == "3") {
                if (role == "Initiator") {
                    var DoerStatus = document.getElementById("ReviewStatus").value;
                    if (DoerStatus == null || DoerStatus == "") {
                        alert("Select Task Status");
                        return false;
                    }
                    var expectedtargetdate = document.getElementById('ExpectedOutput1').value;
                    if (expectedtargetdate == null || expectedtargetdate == "") {
                        alert('Enter Remark');
                        return false;
                    }
                    return true;
                }
                else {
                    var DoerStatus = document.getElementById("ReviewStatus").value;
                    if (DoerStatus == null || DoerStatus == "") {
                        alert("Select Task Status");
                        return false;
                    }
                    var expectedtargetdate = document.getElementById('ExpectedOutput1').value;
                    if (expectedtargetdate == null || expectedtargetdate == "") {
                        alert('Enter Remark');
                        return false;
                    }
                    return true;
                }
            }               
     }
        

    </script>
    <title></title>
</head>
<body>
    @{using (Html.BeginForm("edit", "Initiator", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
      <div class="panel panel-default" style="margin-top:8px;">
        <div class="panel-heading" style="font-size:18px;background-color:#286090;color:white"><center><b>Edit</b></center></div>
        @if (Model.NextStatus == 1)
        {
            if (Model.Role == "Initiator")
            {
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ProjectNo" class="col-form-label">Task No:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.DisplayFor(model => Model.ProjectNo, null, new { @style = "display:inline-block;" })
                            @Html.HiddenFor(model => model.ProjectNo)

                        </div>
                        <div class="col-lg-2">
                            <label for="ReqStatus" class="col-form-label">Status:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.Label(@Model.ReqStatus)
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ProjectName" class="col-form-label">Task Name:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.ProjectName, new { @class = "form-control", @style = "display:inline-block;" })
                            @Html.ValidationMessageFor(model => model.ProjectName)
                        </div>
                        <div class="col-lg-2">
                            <label for="ProjectDescription" class="col-form-label">Task Description:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextAreaFor(model => model.ProjectDescription, new { @class = "form-control", @style = "display:inline-block;" })
                            @Html.ValidationMessageFor(model => model.ProjectDescription)
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ExpectedOutput1" class="col-form-label">Expected Output:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextAreaFor(model => model.ExpectedOutput1, new { @class = "form-control", @style = "display:inline-block;" })
                            @Html.ValidationMessageFor(model => model.ExpectedOutput1)
                        </div>
                        <div class="col-lg-2">
                            <label for="ExpectedTargetDate" class="col-form-label">Expected Target Date:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.ExpectedTargetDate, new { @readonly = "readonly", @class = "form-control", @style = "display:inline-block;" })
                            @Html.ValidationMessageFor(model => model.ExpectedTargetDate)
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="DoerName1" class="col-form-label">Assignee (Doer) :</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.DoerName1, new { @class = "form-control", @style = "display:inline-block;", @readonly = "readonly" })
                            @Html.HiddenFor(model => model.DoerNameGalaxy, new { id = "DoerNameGalaxy" })
                        </div>
                        <div class="col-lg-2">
                            <label for="ReviewBy" class="col-form-label">Review By:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.ReviewBy, new { @readonly = "readonly", @class = "form-control", @style = "display:inline-block;" })
                            @Html.HiddenFor(model => model.ReviewByGalaxy, new { id = "ReviewByGalaxy" })
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="InitiatorRemark" class="col-form-label">Remark :</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.InitiatorRemark, new { @class = "form-control", @style = "display:inline-block;", @readonly = "readonly" })
                            @Html.HiddenFor(model => model.InitiatorRemark, new { id = "DoerNameGalaxy" })
                        </div>

                    </div>
                    <br>
                    <br>
                    <div class="row">
                        <div class="col-lg-12" align="center">
                            <input type="submit" name="Submit" value="Update Task" class="btn btn-info" id="btnSubmit">
                            <input type="submit" value="Back" name="Back" class="btn btn-info">
                        </div>
                    </div>
                    @Html.HiddenFor(model => Model.EmpCode, new { id = "EmpCode" })
                    @Html.HiddenFor(model => Model.GalaxyID)
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="RemarkTrace" class="col-form-label">Logs :</label>
                        </div>
                        <div class="col-lg-10">
                            @Html.TextAreaFor(model => Model.RemarkTrace, new { @class = "form-control", @style = "height:10em;", @readonly = "readonly" })
                        </div>

                    </div>
                </div>
            }
            else
            {
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <label for="Initiator" class="col-form-label">Task Details( @Model.Initiator)</label>
                        </div>

                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ProjectNo" class="col-form-label">Task No:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.DisplayFor(model => Model.ProjectNo)
                            @Html.HiddenFor(model => model.ProjectNo)
                        </div>
                        <div class="col-lg-2">
                            <label for="ReqStatus" class="col-form-label">Status:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.Label(@Model.ReqStatus)
                        </div>

                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="InitiatorName" class="col-form-label">Assigneer:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.DisplayFor(model => model.InitiatorName)
                            @Html.HiddenFor(model => model.InitiatorName)
                            @Html.HiddenFor(model => model.AddedBy)
                        </div>
                        <div class="col-lg-2">
                            <label for="ReviewBy" class="col-form-label">Review By:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.DisplayFor(model => model.ReviewBy)
                            @Html.HiddenFor(model => model.ReviewByGalaxy)
                            @Html.HiddenFor(model => model.ReviewBy)
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="DoerbyName" class="col-form-label">Assignee:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.DisplayFor(model => model.DoerbyName)
                            @Html.HiddenFor(model => model.DoerNameGalaxy)
                            @Html.HiddenFor(model => model.DoerbyName)
                        </div>
                        <div class="col-lg-2">
                            <label for="DelegateTo" class="col-form-label">Doer:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.DisplayFor(model => model.DelegateTo)
                            @Html.HiddenFor(model => model.DelegateToGalaxy)
                            @Html.HiddenFor(model => model.DelegateTo)
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ProjectName" class="col-form-label">Task Name:</label>
                        </div>
                        <div class="col-lg-4">
                            @Model.ProjectName
                        </div>
                        <div class="col-lg-2">
                            <label for="ProjectDescription" class="col-form-label">Task Description:</label>
                        </div>
                        <div class="col-lg-4">
                            @Model.ProjectDescription
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ExpectedOutput1" class="col-form-label">Expected Output:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.DisplayFor(model => model.ExpectedOutput1)
                        </div>
                        <div class="col-lg-2">
                            <label for="ExpectedTargetDate" class="col-form-label">Expected Target Date:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.DisplayFor(model => model.ExpectedTargetDate)
                        </div>
                    </div>
                    <br>

                    @if (Model.Role == "Doer")
                    {

                        <div class="row">
                            <div class="col-lg-2">
                                <label for="ProposedDate" class="col-form-label">Proposed Date:</label>
                            </div>
                            <div class="col-lg-4">
                                @Html.TextBoxFor(model => model.ProposedDate, new { @readonly = "readonly", @class = "form-control", @style = "display:inline-block;" })
                                @Html.ValidationMessageFor(model => model.ProposedDate)
                            </div>
                            <div class="col-lg-2">
                                <label for="DelegateTo" class="col-form-label">Delegate To:</label>
                            </div>
                            <div class="col-lg-4">
                                @Html.TextBoxFor(model => model.DelegateTo, new { id = "DelegateTo1", @readonly = "readonly", @class = "form-control", @style = "display:inline-block;" })
                                @Html.HiddenFor(model => model.DelegateToGalaxy, new { id = "DelegateToGalaxy" })
                                <a href='' onclick='callUserMasterList1(); return false;'>
                                    <img src="~/Content/images/list.png">
                                </a>
                            </div>
                        </div>
                        <br>
                        <div class="row">
                            <div class="col-lg-2">
                                <label for="ProposedDateRemark" class="col-form-label">Remark:</label>
                            </div>
                            <div class="col-lg-4">
                                @Html.TextAreaFor(model => model.ProposedDateRemark, new { @class = "form-control", @style = "display:inline-block;" })
                                @Html.ValidationMessageFor(model => model.ProposedDateRemark)
                            </div>

                        </div>
                        <br>
                    }
                    <div class="row">
                        <div class="col-lg-12" align="center">
                            @if (Model.Role == "Doer")
                            {
                                <input type="submit" name="Submit" value="Submit" id="btnSubmit" class="btn btn-info" onclick="return validaterequestdetails();">
                            }
                            <input type="submit" value="Back" name="Back" class="btn btn-info">
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="RemarkTrace" class="col-form-label">Logs:</label>
                        </div>
                        <div class="col-lg-10">
                            @Html.TextAreaFor(model => Model.RemarkTrace, new { @class = "form-control", @style = "display:inline-block;color:gray", @readonly = "readonly" })

                        </div>

                    </div>

                </div>
            }

        }
        else if (Model.NextStatus == 2)
        {
            if (Model.Role == "Initiator")
            {
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ProjectNo" class="col-form-label">Task No:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.DisplayFor(model => Model.ProjectNo)
                            @Html.HiddenFor(model => model.ProjectNo)
                        </div>
                        <div class="col-lg-2">
                            <label for="ReqStatus" class="col-form-label">Status:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.Label(@Model.ReqStatus)
                        </div>

                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ProjectName" class="col-form-label">Task Name:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.ProjectName, new { @class = "form-control", @style = "display:inline-block;" })
                            @Html.ValidationMessageFor(model => model.ProjectName)
                        </div>
                        <div class="col-lg-6">
                            <label for="ProjectDescription" class="col-form-label">Task Description:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextAreaFor(model => model.ProjectDescription, new { @class = "form-control", @style = "display:inline-block;" })
                            @Html.ValidationMessageFor(model => model.ProjectDescription)
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ExpectedOutput1" class="col-form-label">Expected Output:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextAreaFor(model => model.ExpectedOutput1, new { @class = "form-control", @style = "display:inline-block;" })
                            @Html.ValidationMessageFor(model => model.ExpectedOutput1)
                        </div>
                        <div class="col-lg-6">
                            <label for="ExpectedTargetDate" class="col-form-label">Expected Target Date:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.ExpectedTargetDate, new { @readonly = "readonly", @class = "form-control", @style = "display:inline-block;" })
                            @Html.ValidationMessageFor(model => model.ExpectedTargetDate)
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="DoerName1" class="col-form-label">Assignee (Doer):</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.DoerName1, new { @class = "form-control", @style = "display:inline-block;", @readonly = "readonly" })
                            @Html.HiddenFor(model => model.DoerNameGalaxy, new { id = "DoerNameGalaxy" })
                        </div>
                        <div class="col-lg-6">
                            <label for="ReviewBy" class="col-form-label">Review By:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.ReviewBy, new { @class = "form-control", @style = "display:inline-block;", @readonly = "readonly" })
                            @Html.HiddenFor(model => model.ReviewByGalaxy, new { id = "ReviewByGalaxy" })
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="InitiatorRemark" class="col-form-label">Remark:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextAreaFor(model => model.InitiatorRemark, new { @class = "form-control", @style = "display:inline-block;" })

                        </div>

                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-12" align="center">
                            <input type="submit" name="Submit" value="Update Task" class="btn btn-info" id="btnSubmit" onclick="return validateTaskdetails();">
                            <input type="submit" value="Back" name="Back" class="btn btn-info">
                        </div>
                        @Html.HiddenFor(model => Model.EmpCode, new { id = "EmpCode" })
                        @Html.HiddenFor(model => Model.GalaxyID)
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-12">
                            <label for="Doer" class="col-form-label">Task Details( @Model.Doer)</label>
                        </div>

                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ProposedDate" class="col-form-label">Proposed Date :</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.DisplayFor(model => model.ProposedDate)
                        </div>
                        <div class="col-lg-6">
                            <label for="DelegateTo" class="col-form-label">Delegate To:</label>
                        </div>
                        <div class="col-lg-4">
                            Html.DisplayFor(model => model.DelegateTo)
                        </div>
                    </div>
                    <br>
                    @if (!(string.IsNullOrEmpty(Model.attachment1)))
                    {
                        <div class="row">
                            <div class="col-lg-2">
                                <label for="attachment1" class="col-form-label">Attachment:</label>
                            </div>
                            <div class="col-lg-4">
                                @Html.ActionLink(Model.attachment1, "DownloadAttachment", new { id = Model.ProjectNo })
                            </div>

                        </div>
                        <br>
                    }
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="RemarkTrace" class="col-form-label">Logs :</label>
                        </div>
                        <div class="col-lg-10">
                            @Html.TextAreaFor(model => Model.RemarkTrace, new { @class = "form-control", @style = "display:inline-block;height:10em;color:gray", @readonly = "readonly" })
                        </div>

                    </div>
                    <br>
                </div>
            }
            else
            {

                <div class="row">
                    <div class="col-lg-12">
                        <label for="attachment1" class="col-form-label">Task Details ( @Model.Initiator ) </label>
                    </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ProjectNo" class="col-form-label">Task No :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => Model.ProjectNo)
                        @Html.HiddenFor(model => model.ProjectNo)
                    </div>
                    <div class="col-lg-2">
                        <label for="ReqStatus" class="col-form-label">Status:</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.Label(@Model.ReqStatus)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="InitiatorName" class="col-form-label">Assigneer :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.InitiatorName)
                        @Html.HiddenFor(model => model.InitiatorName)
                        @Html.HiddenFor(model => model.AddedBy)
                    </div>
                    <div class="col-lg-2">
                        <label for="ReviewBy" class="col-form-label">Review By : </label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.ReviewBy)
                        @Html.HiddenFor(model => model.ReviewByGalaxy)
                        @Html.HiddenFor(model => model.ReviewBy)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="DoerbyName" class="col-form-label">Assignee :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.DoerbyName)
                        @Html.HiddenFor(model => model.DoerNameGalaxy)
                        @Html.HiddenFor(model => model.DoerbyName)
                    </div>
                    <div class="col-lg-2">
                        <label for="DelegateTo" class="col-form-label">Doer : </label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.DelegateTo)
                        @Html.HiddenFor(model => model.DelegateToGalaxy)
                        @Html.HiddenFor(model => model.DelegateTo)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ProjectName" class="col-form-label">Task Name :</label>
                    </div>
                    <div class="col-lg-4">
                        @Model.ProjectName
                    </div>
                    <div class="col-lg-2">
                        <label for="ProjectDescription" class="col-form-label">Task Description : </label>
                    </div>
                    <div class="col-lg-4">
                        @Model.ProjectDescription
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ExpectedOutput1" class="col-form-label">Expected Output :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.ExpectedOutput1)
                    </div>
                    <div class="col-lg-2">
                        <label for="ExpectedTargetDate" class="col-form-label">Expected Target Date : </label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.ExpectedTargetDate)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ProposedDate" class="col-form-label">Proposed Date :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.ProposedDate)
                        @Html.HiddenFor(model => model.DelegateTo)
                        @Html.HiddenFor(model => model.DelegateToGalaxy)
                    </div>

                </div>
                <br>
                if (!(string.IsNullOrEmpty(Model.ReviewStatus)))
                {
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="Status" class="col-form-label">Task Status (Doer) :</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.Label("Completed")
                        </div>
                        @if (!(string.IsNullOrEmpty(Model.attachment1)))
                        {
                            <div class="col-lg-2">
                                <label for="attachment1" class="col-form-label">Attachment :</label>
                            </div>
                            <div class="col-lg-4">
                                @Html.ActionLink(Model.attachment1, "DownloadAttachment", new { id = Model.ProjectNo })
                            </div>
                        }

                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="Status" class="col-form-label">Task Status (Reviewer) :</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.Label(@Model.ReviewStatus)
                        </div>

                    </div>
                    <br>
                    if ((Model.Role == "Doer") && (Model.pendingforGalaxy.Contains(Model.GalaxyID)) && ((Model.DelegateToGalaxy == Model.DoerName1) || (Model.DelegateToGalaxy != Model.DoerName1)))
                    {
                        <div class="row">
                            <div class="col-lg-2">
                                <label for="DoerStatus" class="col-form-label">Select Status of Task :</label>
                            </div>
                            <div class="col-lg-4">
                                @Html.DropDownListFor(model => Model.DoerStatus, new List<SelectListItem>{
                               new SelectListItem() {Text = "", Value=""},
                               new SelectListItem() {Text = "Pending", Value="Pending"},
                               new SelectListItem() {Text = "Completed", Value="Completed"}}, new { @class = "form-control search", @style = "display:inline-block;" })
                            </div>
                            <div class="col-lg-2">
                                <label for="doerAttachment" class="col-form-label">Attachment :</label>
                            </div>
                            <div class="col-lg-4">
                                @Html.TextBoxFor(model => model.doerAttachment, new { type = "file", @id = "RefDoc", @class = "form-control", @style = "display:inline-block;" })
                                @if (!(string.IsNullOrEmpty(Model.attachment1)))
                                {

                                    @Html.ActionLink(Model.attachment1, "DownloadAttachment", new { id = Model.ProjectNo })
                                }
                            </div>
                        </div>
                        <br>
                        <div class="row">
                            <div class="col-lg-2">
                                <label for="Remark" class="col-form-label">Remark :</label>
                            </div>
                            <div class="col-lg-4">
                                @Html.TextAreaFor(model => model.Remark, new { @class = "form-control", @style = "display:inline-block;" })
                                @Html.ValidationMessageFor(model => model.Remark)
                            </div>

                        </div>
                        <br>

                    }
                    if (Model.Role == "Delegate")
                    {
                        <div class="row">
                            <div class="col-lg-2">
                                <label for="Doer" class="col-form-label">Doer :</label>
                            </div>
                            <div class="col-lg-4">

                            </div>

                        </div>
                        <br>
                        <div class="row">
                            <div class="col-lg-2">
                                <label for="DelegateStatus" class="col-form-label">Select Status of Task :</label>
                            </div>
                            <div class="col-lg-4">
                                @Html.DropDownListFor(model => Model.DelegateStatus, new List<SelectListItem>{
                                   new SelectListItem() {Text = "", Value=""},
                               new SelectListItem() {Text = "Pending", Value="Pending"},
                               new SelectListItem() {Text = "Completed", Value="Completed"}}, new { @class = "form-control search", @style = "display:inline-block;" })
                            </div>

                        </div>
                        <br>
                        <div class="row">
                            <div class="col-lg-2">
                                <label for="Remark" class="col-form-label">Remark :</label>
                            </div>
                            <div class="col-lg-4">
                                @Html.TextAreaFor(model => model.Remark, new { @class = "form-control", @style = "display:inline-block;" })
                                @Html.ValidationMessageFor(model => model.Remark)
                            </div>

                        </div>
                        <br>

                    }
                    <div class="row">
                        <div class="col-lg-12" align="center">

                            @if (Model.Role == "Delegate")
                            {
                                <input type="submit" value="Submit" name="Submit" id="btnSubmit" onclick="return validaterequestdetails();" class="btn btn-info" />
                                <input type="submit" value="Back" name="Back" class="btn btn-info" />
                            }
                            else if ((Model.Role == "Doer") && (Model.pendingforGalaxy.Contains(Model.GalaxyID)) && ((Model.DelegateToGalaxy == Model.DoerName1) || (Model.DelegateToGalaxy != Model.DoerName1)))
                            {
                                <input type="submit" value="Submit" name="Submit" id="btnSubmit" onclick="return validaterequestdetails();" class="btn btn-info" />
                                <input type="submit" value="Back" name="Back" class="btn btn-info" />
                            }
                            else
                            {
                                <input type="submit" value="Back" name="Back" class="btn btn-info" />
                            }
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="RemarkTrace" class="col-form-label">Logs :</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.TextAreaFor(model => Model.RemarkTrace, new { @class = "form-control", @style = "display:inline-block;height:10em;color:gray", @readonly = "readonly" })
                        </div>

                    </div>
                    <br>

                }
            }
        }
        else if (Model.NextStatus == 3)
        {
            if (Model.Role == "Initiator")
            {
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ProjectNo" class="col-form-label">Task No :</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.DisplayFor(model => Model.ProjectNo)
                            @Html.HiddenFor(model => model.ProjectNo)
                        </div>
                        <<div class="col-lg-2">
                            <label for="ReqStatus" class="col-form-label">Status:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.Label(@Model.ReqStatus)
                        </div>
                    </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ProjectName" class="col-form-label">Task Name :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(model => model.ProjectName, new { @class = "form-control", @style = "display:inline-block;" })
                        @Html.ValidationMessageFor(model => model.ProjectName)
                    </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ProjectDescription" class="col-form-label">Task Description :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.TextAreaFor(model => model.ProjectDescription, new { @class = "form-control", @style = "display:inline-block;" })
                        @Html.ValidationMessageFor(model => model.ProjectDescription)
                    </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ExpectedOutput1" class="col-form-label">Expected Output :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.TextAreaFor(model => model.ExpectedOutput1, new { @class = "form-control", @style = "display:inline-block;" })
                        @Html.ValidationMessageFor(model => model.ExpectedOutput1)
                    </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ExpectedTargetDate" class="col-form-label">Expected Target Date :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(model => model.ExpectedTargetDate, new { @readonly = "readonly", @class = "form-control", @style = "display:inline-block;" })
                        @Html.ValidationMessageFor(model => model.ExpectedTargetDate)
                    </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="DoerName1" class="col-form-label">Assignee (Doer) :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(model => model.DoerName1, new { @class = "form-control", @style = "display:inline-block;", @readonly = "readonly" })
                        @Html.HiddenFor(model => model.DoerNameGalaxy, new { id = "DoerNameGalaxy" })
                    </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ReviewBy" class="col-form-label">Review By :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(model => model.ReviewBy, new { @class = "form-control", @style = "display:inline-block;", @readonly = "readonly" })
                        @Html.HiddenFor(model => model.ReviewByGalaxy, new { id = "ReviewByGalaxy" })
                    </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="InitiatorRemark" class="col-form-label">Remark :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.TextAreaFor(model => model.InitiatorRemark, new { @class = "form-control", @style = "display:inline-block;" })
                    </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-lg-12" align="center">
                        <input type="submit" value="Update Task" name="Submit" id="btnSubmit" onclick="return validateTaskdetails();" class="btn btn-info" />
                        <input type="submit" value="Back" name="Back" class="btn btn-info" />

                    </div>
                    @Html.HiddenFor(model => Model.EmpCode, new { id = "EmpCode" })
                    @Html.HiddenFor(model => Model.GalaxyID)
                </div>
                <br><br>
                <div class="row">
                    <div class="col-lg-12">
                        Task Details ( @Model.Doer)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ProposedDate" class="col-form-label">Proposed Date :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.ProposedDate)
                    </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="DelegateTo" class="col-form-label">Delegate To :</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.DelegateTo)
                    </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="DelegateStatus" class="col-form-label">Task Status (Doer) :</label>
                    </div>
                    <div class="col-lg-4">
                        @if (!(string.IsNullOrEmpty(Model.DelegateStatus)))
                        {
                            @Html.Label(@Model.DelegateStatus)
                        }
                        else if (!(string.IsNullOrEmpty(Model.DoerStatus)))
                        {
                            @Html.Label(@Model.DoerStatus)
                        }
                    </div>
                </div>
                <br>
                if (!(string.IsNullOrEmpty(Model.attachment1)))
                {
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="attachment1" class="col-form-label">Attachment:</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.ActionLink(Model.attachment1, "DownloadAttachment", new { id = Model.ProjectNo })
                        </div>
                    </div>
                    <br>
                }
                if (!(string.IsNullOrEmpty(Model.ReviewStatus)))
                {
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ReviewStatus" class="col-form-label">Task Status (Reviewer):</label>
                        </div>
                        <div class="col-lg-4">
                            @Html.Label(@Model.ReviewStatus)
                        </div>
                    </div>
                    <br>
                }

            }
            else
            {
                <div class="row">
                    <div class="col-lg-12">
                        <label for="ReviewStatus" class="col-form-label">Task Details (@Model.Initiator ):</label>
                    </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ProjectNo" class="col-form-label">Task No:</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => Model.ProjectNo)
                        @Html.HiddenFor(model => model.ProjectNo)
                    </div>
                    <div class="col-lg-2">
                        <label for="ReqStatus" class="col-form-label">Status:</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.Label(@Model.ReqStatus)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="InitiatorName" class="col-form-label">Assigneer:</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.InitiatorName)
                        @Html.HiddenFor(model => model.InitiatorName)
                        @Html.HiddenFor(model => model.AddedBy)
                    </div>
                    <div class="col-lg-2">
                        <label for="ReviewBy" class="col-form-label">Review By</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.ReviewBy)
                        @Html.HiddenFor(model => model.ReviewByGalaxy)
                        @Html.HiddenFor(model => model.ReviewBy)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="DoerbyName" class="col-form-label">Assignee:</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.DoerbyName)
                        @Html.HiddenFor(model => model.DoerNameGalaxy)
                        @Html.HiddenFor(model => model.DoerbyName)
                    </div>
                    <div class="col-lg-2">
                        <label for="DelegateTo" class="col-form-label">Doer:</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.DelegateTo)
                        @Html.HiddenFor(model => model.DelegateToGalaxy)
                        @Html.HiddenFor(model => model.DelegateTo)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ProjectName" class="col-form-label">Task Name:</label>
                    </div>
                    <div class="col-lg-4">
                        @Model.ProjectName
                    </div>
                    <div class="col-lg-2">
                        <label for="ProjectDescription" class="col-form-label">Task Description:</label>
                    </div>
                    <div class="col-lg-4">
                        @Model.ProjectDescription
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ExpectedOutput1" class="col-form-label">Expected Output:</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.ExpectedOutput1)
                    </div>
                    <div class="col-lg-2">
                        <label for="ExpectedTargetDate" class="col-form-label">Expected Target Date:</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.ExpectedTargetDate)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ExpectedTargetDate" class="col-form-label">Expected Target Date:</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.ExpectedTargetDate)
                    </div>
                    <div class="col-lg-2">
                        <label for="ProposedDate" class="col-form-label">Proposed Date:</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DisplayFor(model => model.ProposedDate)
                        @Html.HiddenFor(model => model.DelegateTo)
                        @Html.HiddenFor(model => model.DelegateToGalaxy)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="DelegateStatus" class="col-form-label">Task Status (Doer)</label>
                    </div>
                    <div class="col-lg-10">
                        @if (!(string.IsNullOrEmpty(Model.DelegateStatus)))
                        {
                            @Html.Label(@Model.DelegateStatus)
                        }
                        else if (!(string.IsNullOrEmpty(Model.DoerStatus)))
                        {
                            @Html.Label(@Model.DoerStatus)
                        }
                    </div>

                </div>
                <br>
                if (!(string.IsNullOrEmpty(Model.attachment1)))
                {
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="attachment1" class="col-form-label">Attachment</label>
                        </div>
                        <div class="col-lg-10">
                            @Html.ActionLink(Model.attachment1, "DownloadAttachment", new { id = Model.ProjectNo })
                        </div>

                    </div>
                    <br>
                }
                if (!(string.IsNullOrEmpty(Model.ReviewStatus)))
                {
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="ReviewStatus" class="col-form-label">Task Status (Reviewer)</label>
                        </div>
                        <div class="col-lg-10">
                            @Html.Label(@Model.ReviewStatus)
                        </div>

                    </div>
                    <br>
                }
            }
            if ((Model.Role == "Review" || Model.AddedBy == Model.ReviewByGalaxy) && (Model.pendingforGalaxy.Contains(Model.GalaxyID)))
            {
                <div class="row">
                    <div class="col-lg-2">
                        <label for="Review" class="col-form-label">Review</label>
                    </div>
                    <div class="col-lg-10">

                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="Review" class="col-form-label">Select Status of Task</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.DropDownListFor(model => Model.ReviewStatus, new List<SelectListItem>{
                                     new SelectListItem() {Text = "", Value=""},
                                     new SelectListItem() {Text = "Verified", Value="Verified"},
                                     new SelectListItem() {Text = "Not Verified", Value="Not Verified"}
                      }, new { @class = "form-control search", @style = "display:inline-block;" })
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="Remark" class="col-form-label">Remark</label>
                    </div>
                    <div class="col-lg-4">
                        @Html.TextAreaFor(model => model.Remark, new { @class = "form-control", @style = "display:inline-block;" })
                        @Html.ValidationMessageFor(model => model.Remark)
                    </div>
                </div>
                <br>

            }
            <div class="row">
                @if ((Model.Role == "Review" || Model.AddedBy == Model.ReviewByGalaxy) && (Model.pendingforGalaxy.Contains(Model.GalaxyID)))
                {
                    <input type="submit" value="Submit" name="Submit" id="btnSubmit" onclick="return validaterequestdetails();" class="btn btn-info" />
                    <input type="submit" value="Back" name="Back" class="btn btn-info" />
                }
                else
                {
                    <input type="submit" value="Back" name="Back" class="btn btn-info" />
                }

            </div>
            <br>
            <br>
            <div class="row">
                <div class="col-lg-2">
                    <label for="RemarkTrace" class="col-form-label">Logs :</label>
                </div>
                <div class="col-lg-10">
                    @Html.TextAreaFor(model => Model.RemarkTrace, new { style = "display:inline-block;height:10em;color:gray", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <br>

        }
        else
        {
            <div class="row">
                <div class="col-lg-12">
                    <label for="Initiator" class="col-form-label">Task Details (@Model.Initiator )</label>
                </div>

            </div>
            <br>
            <div class="row">
                <div class="col-lg-2">
                    <label for="ProjectNo" class="col-form-label">Task No:</label>
                </div>
                <div class="col-lg-4">
                    @Html.DisplayFor(model => Model.ProjectNo)
                    @Html.HiddenFor(model => model.ProjectNo)
                </div>
                <div class="col-lg-2">
                    <label for="ReqStatus" class="col-form-label">Status:</label>
                </div>
                <div class="col-lg-4">
                    @Html.Label(@Model.ReqStatus)
                </div>
            </div>
            <br>
            <div class="row">
                <div class="col-lg-2">
                    <label for="InitiatorName" class="col-form-label">Assigneer</label>
                </div>
                <div class="col-lg-4">
                    @Html.DisplayFor(model => model.InitiatorName)
                    @Html.HiddenFor(model => model.InitiatorName)
                    @Html.HiddenFor(model => model.AddedBy)
                </div>
                <div class="col-lg-2">
                    <label for="ReviewBy" class="col-form-label"> Review By</label>

                </div>
                <div class="col-lg-4">
                    @Html.DisplayFor(model => model.ReviewBy)
                    @Html.HiddenFor(model => model.ReviewByGalaxy)
                    @Html.HiddenFor(model => model.ReviewBy)
                </div>
            </div>
            <br>
            <div class="row">
                <div class="col-lg-2">
                    <label for="DoerbyName" class="col-form-label">Assignee</label>
                </div>
                <div class="col-lg-4">
                    @Html.DisplayFor(model => model.DoerbyName)
                    @Html.HiddenFor(model => model.DoerNameGalaxy)
                    @Html.HiddenFor(model => model.DoerbyName)
                </div>
                <div class="col-lg-2">
                    <label for="DelegateTo" class="col-form-label"> Doer</label>

                </div>
                <div class="col-lg-4">
                    @Html.DisplayFor(model => model.DelegateTo)
                    @Html.HiddenFor(model => model.DelegateToGalaxy)
                    @Html.HiddenFor(model => model.DelegateTo)
                </div>
            </div>
            <br>
            <div class="row">
                <div class="col-lg-2">
                    <label for="ProjectName" class="col-form-label">Task Name</label>
                </div>
                <div class="col-lg-4">
                    @Model.ProjectName
                </div>
                <div class="col-lg-2">
                    <label for="ProjectDescription" class="col-form-label"> Task Description</label>

                </div>
                <div class="col-lg-4">
                    @Model.ProjectDescription
                </div>
            </div>
            <br>
            <div class="row">
                <div class="col-lg-2">
                    <label for="ExpectedOutput1" class="col-form-label">Expected Output</label>
                </div>
                <div class="col-lg-4">
                    @Html.DisplayFor(model => model.ExpectedOutput1)
                </div>

            </div>
            <br>
            <div class="row">
                <div class="col-lg-2">
                    <label for="ExpectedTargetDate" class="col-form-label">Expected Target Date</label>

                </div>
                <div class="col-lg-4">
                    @Html.DisplayFor(model => model.ExpectedTargetDate)
                </div>
                <div class="col-lg-2">
                    <label for="ProposedDate" class="col-form-label">Proposed Date</label>

                </div>
                <div class="col-lg-4">
                    @Html.DisplayFor(model => model.ProposedDate)
                    @Html.HiddenFor(model => model.DelegateTo)
                    @Html.HiddenFor(model => model.DelegateToGalaxy)
                </div>
            </div>
            <br>
            <div class="row">
                <div class="col-lg-2">
                    <label for="DelegateStatus" class="col-form-label">Task Status (Doer)</label>

                </div>
                <div class="col-lg-4">
                    @if (!(string.IsNullOrEmpty(Model.DelegateStatus)))
                    {
                        @Html.Label(@Model.DelegateStatus)
                    }
                    else if (!(string.IsNullOrEmpty(Model.DoerStatus)))
                    {
                        @Html.Label(@Model.DoerStatus)
                    }
                </div>

            </div>
            <br>
            if (!(string.IsNullOrEmpty(Model.attachment1)))
            {
                <div class="row">
                    <div class="col-lg-2">
                        <label for="attachment1" class="col-form-label">Attachment</label>

                    </div>
                    <div class="col-lg-4">
                        @Html.ActionLink(Model.attachment1, "DownloadAttachment", new { id = Model.ProjectNo })
                    </div>

                </div>
                <br>
            }
            if (!(string.IsNullOrEmpty(Model.ReviewStatus)))
            {
                <div class="row">
                    <div class="col-lg-2">
                        <label for="ReviewStatus" class="col-form-label">Task Status (Reviewer)</label>

                    </div>
                    <div class="col-lg-4">
                        @Html.Label(@Model.ReviewStatus)
                    </div>

                </div>
                <br>
            }
            <div class="row">
                <div class="col-lg-2">
                    <label for="RemarkTrace" class="col-form-label">Remark</label>

                </div>
                <div class="col-lg-10">
                    @Html.TextAreaFor(model => Model.RemarkTrace, new { style = "display:inline-block;height:10em;color:gray", @class = "form-control", @readonly = "readonly" })
                </div>

            </div>
            <br>
            <div class="row">
                <div class="col-lg-12" align="center">

                    <input type="submit" value="Back" name="Back" class="btn btn-info">
                </div>
            </div>
        }
    </div>
            @Html.HiddenFor(model => Model.EmpCode)
            @Html.HiddenFor(model => Model.GalaxyID)
            @Html.HiddenFor(model => Model.pendingfor)
            @Html.HiddenFor(model => Model.pendingforGalaxy)
            @Html.HiddenFor(model => model.DelegateToGalaxy)
            @Html.HiddenFor(model => model.Role)
            @Html.HiddenFor(model => Model.NextStatus, new { id = "NextStatus" })
            @Html.HiddenFor(model => Model.oldExpDate)
            @Html.HiddenFor(model => Model.oldProposedDate)
        }
    }
</body>
</html>